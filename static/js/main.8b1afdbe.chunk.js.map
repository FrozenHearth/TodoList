{"version":3,"sources":["components/TodoItem.js","components/TodoInput.js","components/Footer.js","components/TodoList.js","App.js","index.js"],"names":["TodoItem","props","todo","complete","text","console","log","className","onChange","toggleCompleted","type","checked","onClick","deleteTodo","TodoInput","state","handleChange","e","target","name","value","setState","handleSubmit","event","preventDefault","trim","length","onSubmit","completed","id","shortid","generate","this","autoComplete","placeholder","Component","Footer","remaining","activeTodo","updateTodoToShow","TodoList","todos","todosToShow","addTodo","newTodos","completedTodos","map","deletedTodo","filter","localStorage","getItem","JSON","parse","_","nextState","setItem","stringify","key","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8b1afdbe.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/TodoItem.css';\n\nexport const TodoItem = props => {\n  const { complete, text } = props.todo;\n  console.log(complete);\n  return (\n    <div className=\"todo-item\">\n      <input\n        onChange={props.toggleCompleted}\n        className=\"toggle\"\n        type=\"checkbox\"\n        checked={complete}\n      />\n      <label className={complete ? 'todo-complete-label' : 'todo-text-label'}>\n        {text}\n      </label>\n      <button onClick={props.deleteTodo} className=\"delete-btn\">\n        X\n      </button>\n    </div>\n  );\n};\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport '../styles/TodoInput.css';\n\nexport default class TodoInput extends Component {\n  state = {\n    text: ''\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n  handleSubmit = event => {\n    event.preventDefault();\n    const { text } = this.state;\n    const trimmedText = text.trim();\n    if (trimmedText.length > 0) {\n      this.props.onSubmit({\n        text,\n        completed: false,\n        id: shortid.generate()\n      });\n      this.setState({\n        text: ''\n      });\n    }\n  };\n  render() {\n    const { text } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className=\"todo-input-container\">\n        <input\n          autoComplete=\"off\"\n          className=\"todo-input\"\n          value={text}\n          onChange={this.handleChange}\n          name=\"text\"\n          type=\"text\"\n          placeholder=\"What needs to be done?\"\n        />\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport '../styles/footer.css';\n\nexport const Footer = props => {\n  const { remaining, activeTodo, updateTodoToShow } = props;\n  return (\n    <footer className=\"footer-container\">\n      <p className=\"todos-count\">\n        {remaining !== 1 ? `${remaining} items left` : `${remaining} item left`}\n      </p>\n      <ul className=\"filters\">\n        <li\n          className={\n            activeTodo === 'allButton' ? 'all-btn active-btn-border' : 'all-btn'\n          }\n          onClick={() => updateTodoToShow('all', 'allButton')}\n        >\n          All\n        </li>\n        <li\n          className={\n            activeTodo === 'activeButton'\n              ? 'active-todo-btn active-btn-border'\n              : 'active-todo-btn'\n          }\n          onClick={() => updateTodoToShow('active', 'activeButton')}\n        >\n          Active\n        </li>\n        <li\n          className={\n            activeTodo === 'completeButton'\n              ? 'complete-btn active-btn-border'\n              : 'complete-btn'\n          }\n          onClick={() => updateTodoToShow('complete', 'completeButton')}\n        >\n          Completed\n        </li>\n      </ul>\n    </footer>\n  );\n};\n","import React, { Component } from 'react';\nimport { TodoItem } from './TodoItem';\nimport TodoInput from './TodoInput';\nimport '../styles/TodoList.css';\nimport { Footer } from './Footer';\n\nexport default class TodoList extends Component {\n  state = {\n    todos: [],\n    todosToShow: 'all',\n    activeTodo: 'allButton'\n  };\n\n  componentDidMount() {\n    localStorage.getItem('todos') &&\n      this.setState({\n        todos: JSON.parse(localStorage.getItem('todos'))\n      });\n  }\n\n  UNSAFE_componentWillUpdate(_, nextState) {\n    localStorage.setItem('todos', JSON.stringify(nextState.todos));\n  }\n\n  addTodo = todo => {\n    const newTodos = [...this.state.todos, todo];\n    this.setState({\n      todos: newTodos\n    });\n  };\n\n  toggleCompleted = id => {\n    const completedTodos = this.state.todos.map(todo => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          complete: !todo.complete\n        };\n      } else {\n        return todo;\n      }\n    });\n    this.setState({\n      todos: completedTodos\n    });\n  };\n\n  updateTodoToShow = (todo, activeTodo) => {\n    this.setState({\n      todosToShow: todo,\n      activeTodo\n    });\n  };\n\n  deleteTodo = id => {\n    const deletedTodo = this.state.todos.filter(todo => todo.id !== id);\n    this.setState({\n      todos: deletedTodo\n    });\n  };\n  render() {\n    let todos = [];\n    const { todosToShow, activeTodo } = this.state;\n    const remaining = this.state.todos.filter(todo => !todo.complete).length;\n    if (todosToShow === 'all' && activeTodo === 'allButton') {\n      todos = this.state.todos;\n    } else if (todosToShow === 'active' && activeTodo === 'activeButton') {\n      todos = this.state.todos.filter(todo => !todo.complete);\n    } else if (todosToShow === 'complete' && activeTodo === 'completeButton') {\n      todos = this.state.todos.filter(todo => todo.complete);\n    }\n    return (\n      <>\n        <TodoInput onSubmit={this.addTodo} />\n        {this.state.todos.length > 0 && (\n          <div className=\"todo-list\">\n            {todos.map(todo => (\n              <TodoItem\n                key={todo.id}\n                toggleCompleted={() => this.toggleCompleted(todo.id)}\n                deleteTodo={() => this.deleteTodo(todo.id)}\n                todo={todo}\n              />\n            ))}\n            <Footer\n              updateTodoToShow={this.updateTodoToShow}\n              remaining={remaining}\n              activeTodo={activeTodo}\n            />\n          </div>\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport TodoList from './components/TodoList';\n\nexport const App = () => {\n  return (\n    <>\n      <h1 className=\"header-text\">todos</h1>\n      <TodoList />\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport \"./styles/index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}